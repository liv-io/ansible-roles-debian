---

{{ansible_managed|comment(decoration='#')}}

apiVersion: v1
kind: Pod
metadata:
  labels:
    app: woodpecker
  name: pod_woodpecker
spec:
  containers:
  - name: woodpecker-server
    image: {{pod_woodpecker_registry_address}}/woodpecker-server:{{pod_woodpecker_woodpecker_server_version}}
    ports:
    - name: woodpecker-server-main
      containerPort: 8000
      hostPort: 8000
      protocol: TCP
    - name: woodpecker-server-grpc
      containerPort: 9000
      hostPort: 9000
      protocol: TCP
    - name: woodpecker-server-metrics
      containerPort: 9001
      hostPort: 9001
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: {{pod_woodpecker_woodpecker_server_read_only_root_filesystem|lower}}
      runAsGroup: 10000
      runAsUser: 10000
      seLinuxOptions:
        type: spc_t
    volumeMounts:
    - name: woodpecker-server-db
      mountPath: /var/local/woodpecker-server/db
    workingDir: /
    env:
{% if not (pod_woodpecker_woodpecker_server_variables == {}) %}
{% for key, value in pod_woodpecker_woodpecker_server_variables.items() %}
    - name: {{key|upper}}
      value: '{{value}}'
{% endfor %}
{% endif %}

  - name: woodpecker-agent
    image: {{pod_woodpecker_registry_address}}/woodpecker-agent:{{pod_woodpecker_woodpecker_agent_version}}
    ports:
    - name: woodpecker-agent-health
      containerPort: 3000
      hostPort: 3000
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        add:
          - SYS_ADMIN
          - MKNOD
          - SYS_CHROOT
          - SETFCAP
          - SYS_RESOURCE
          - SETUID
          - SETGID
      privileged: true
      readOnlyRootFilesystem: {{pod_woodpecker_woodpecker_agent_read_only_root_filesystem|lower}}
      runAsGroup: 0
      runAsUser: 0
      seLinuxOptions:
        type: spc_t
    volumeMounts:
    - name: woodpecker-agent-fuse
      mountPath: /dev/fuse
    - name: woodpecker-agent-containers
      mountPath: /var/lib/containers
    - name: woodpecker-agent-podman-sock
      mountPath: /run/podman/podman.sock
    - name: woodpecker-agent-certs
      mountPath: /var/local/woodpecker-agent/certs
    - name: woodpecker-agent-tmp
      mountPath: /var/local/woodpecker-agent/tmp
    workingDir: /
    env:
{% if not (pod_woodpecker_woodpecker_agent_variables == {}) %}
{% for key, value in pod_woodpecker_woodpecker_agent_variables.items() %}
    - name: {{key|upper}}
      value: '{{value}}'
{% endfor %}
{% endif %}

  dnsConfig: {}
  restartPolicy: Always

  volumes:
  - name: woodpecker-server-db
    hostPath:
      type: Directory
      path: {{file_dst_woodpecker_server_db_dir}}

  - name: woodpecker-agent-containers
    hostPath:
      type: Directory
      path: /var/lib/containers

  - name: woodpecker-agent-fuse
    hostPath:
      type: Directory
      path: /dev/fuse

  - name: woodpecker-agent-podman-sock
    hostPath:
      type: Directory
      path: /run/podman/podman.sock

  - name: woodpecker-agent-certs
    hostPath:
      type: Directory
      path: {{file_dst_woodpecker_agent_certs_dir}}

  - name: woodpecker-agent-tmp
    hostPath:
      type: Directory
      path: {{file_dst_woodpecker_agent_tmp_dir}}

status: {}
