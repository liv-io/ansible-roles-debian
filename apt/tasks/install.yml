---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - apt

- name: install package gnupg1
  package:
    state: present
    name: "{{package_name_gnupg1}}"
    install_recommends: False
  tags:
    - apt

- name: install package mailx
  package:
    state: present
    name: "{{package_name_mailx}}"
    install_recommends: False
  when: (apt_monitor_mail_state == True)
  tags:
    - apt

- name: install package apt
  package:
    state: present
    name: "{{package_name_apt}}"
    install_recommends: False
  tags:
    - apt

- name: create file apt.conf
  template:
    src: "{{file_src_apt_conf}}"
    dest: "{{file_dst_apt_conf}}"
    mode: "{{file_mode_apt_conf}}"
    owner: "{{file_owner_apt_conf}}"
    group: "{{file_group_apt_conf}}"
  tags:
    - apt

- name: create file local_sbin.dir
  file:
    state: directory
    path: "{{file_dst_local_sbin_dir}}"
    mode: "{{file_mode_local_sbin_dir}}"
    owner: "{{file_owner_local_sbin_dir}}"
    group: "{{file_group_local_sbin_dir}}"
  tags:
    - apt

- name: create file apt_check-update
  template:
    src: "{{file_src_apt_check_update}}"
    dest: "{{file_dst_apt_check_update}}"
    mode: "{{file_mode_apt_check_update}}"
    owner: "{{file_owner_apt_check_update}}"
    group: "{{file_group_apt_check_update}}"
  tags:
    - apt

- name: create cron apt_check-update
  cron:
    state: present
    disabled: "{{True if (apt_check_update_state == False) else False}}"
    name: "{{cron_name_apt_check_update}}"
    cron_file: "{{cron_cron_file_apt_check_update}}"
    day: "{{cron_day_apt_check_update}}"
    hour: "{{cron_hour_apt_check_update}}"
    minute: "{{cron_minute_apt_check_update}}"
    month: "{{cron_month_apt_check_update}}"
    weekday: "{{cron_weekday_apt_check_update}}"
    user: "{{cron_user_apt_check_update}}"
    job: "{{cron_job_apt_check_update}}"
  tags:
    - apt

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (apt_nftables_state == True)
  tags:
    - apt

- name: create file nftables.d
  file:
    state: directory
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (apt_nftables_state == True) and (register_nftables_d.stat.exists == False)
  tags:
    - apt

- name: create file apt.nft
  template:
    src: "{{file_src_apt_nft}}"
    dest: "{{file_dst_apt_nft}}"
    mode: "{{file_mode_apt_nft}}"
    owner: "{{file_owner_apt_nft}}"
    group: "{{file_group_apt_nft}}"
  notify: reload nftables
  when: (apt_nftables_state == True)
  tags:
    - apt

- name: remove file apt.nft
  file:
    state: absent
    path: "{{file_dst_apt_nft}}"
  notify: reload nftables
  when: (apt_nftables_state == False)
  tags:
    - apt
