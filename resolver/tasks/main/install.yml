---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - resolver

- name: create file resolv.conf
  template:
    src: "{{file_src_resolv_conf}}"
    dest: "{{file_dst_resolv_conf}}"
    mode: "{{file_mode_resolv_conf}}"
    owner: "{{file_owner_resolv_conf}}"
    group: "{{file_group_resolv_conf}}"
  tags:
    - resolver

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (resolver_nftables_state == True)
  tags:
    - resolver

- name: create file nftables.d
  file:
    state: directory
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (resolver_nftables_state == True) and (register_nftables_d.stat.exists == False)
  tags:
    - resolver

- name: check service nftables
  shell: "{{command_cmd_check_service_nftables}}"
  register: register_check_service_nftables
  changed_when: (register_check_service_nftables.rc > 1)
  failed_when: (register_check_service_nftables.rc > 1)
  check_mode: False
  when: (resolver_nftables_state == True)
  tags:
    - resolver

- name: create file resolver.nft
  template:
    src: "{{file_src_resolver_nft}}"
    dest: "{{file_dst_resolver_nft}}"
    mode: "{{file_mode_resolver_nft}}"
    owner: "{{file_owner_resolver_nft}}"
    group: "{{file_group_resolver_nft}}"
  notify: reload service nftables
  when: (resolver_nftables_state == True)
  tags:
    - resolver

- name: remove file resolver.nft
  file:
    state: absent
    path: "{{file_dst_resolver_nft}}"
  notify: reload service nftables
  when: (resolver_nftables_state == False)
  tags:
    - resolver
