---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - pod_registry

- name: check service pod_registry
  shell: "{{command_cmd_check_service_pod_registry}}"
  register: register_check_service_pod_registry
  changed_when: (register_check_service_pod_registry.rc == 0)
  failed_when: (register_check_service_pod_registry.rc > 1)
  check_mode: 'no'
  tags:
    - pod_registry

- name: stop service pod_registry
  service:
    state: 'stopped'
    enabled: 'no'
    name: "{{service_name_pod_registry}}"
    daemon_reload: 'yes'
  when: (register_check_service_pod_registry.rc == 0)
  tags:
    - pod_registry

- name: remove user pod_registry
  user:
    state: 'absent'
    name: "{{user_name_pod_registry}}"
    remove: "{{user_home_remove_pod_registry}}"
    force: "{{user_home_force_pod_registry}}"
  tags:
    - pod_registry

- name: remove group pod_registry
  group:
    state: 'absent'
    name: "{{group_name_pod_registry}}"
  tags:
    - pod_registry

- name: remove file pod_registry.cfg
  file:
    state: 'absent'
    path: "{{file_dst_pod_registry_cfg}}"
  notify: reload service monit
  tags:
    - pod_registry

- name: remove file pod_registry_etc.dir
  file:
    state: 'absent'
    path: "{{file_dst_pod_registry_etc_dir}}"
  tags:
    - pod_registry

- name: remove file pod_registry.default
  file:
    state: 'absent'
    path: "{{file_dst_pod_registry_default}}"
  tags:
    - pod_registry

- name: remove file pod_registry.service
  file:
    state: 'absent'
    path: "{{file_dst_pod_registry_service}}"
  tags:
    - pod_registry
