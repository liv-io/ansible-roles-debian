---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - loki

- name: create file loki.default
  template:
    src: "{{file_src_loki_default}}"
    dest: "{{file_dst_loki_default}}"
    mode: "{{file_mode_loki_default}}"
    owner: "{{file_owner_loki_default}}"
    group: "{{file_group_loki_default}}"
  notify: restart service loki
  tags:
    - loki

- name: create file loki.yaml
  template:
    src: "{{file_src_loki_yaml}}"
    dest: "{{file_dst_loki_yaml}}"
    mode: "{{file_mode_loki_yaml}}"
    owner: "{{file_owner_loki_yaml}}"
    group: "{{file_group_loki_yaml}}"
  notify: restart service loki
  tags:
    - loki

- name: create file loki_datasource.yaml
  template:
    src: "{{file_src_loki_datasource_yaml}}"
    dest: "{{file_dst_loki_datasource_yaml}}"
    mode: "{{file_mode_loki_datasource_yaml}}"
    owner: "{{file_owner_loki_datasource_yaml}}"
    group: "{{file_group_loki_datasource_yaml}}"
  notify: restart service grafana
  tags:
    - loki

- name: create file loki_prometheus_datasource.yaml
  template:
    src: "{{file_src_loki_prometheus_datasource_yaml}}"
    dest: "{{file_dst_loki_prometheus_datasource_yaml}}"
    mode: "{{file_mode_loki_prometheus_datasource_yaml}}"
    owner: "{{file_owner_loki_prometheus_datasource_yaml}}"
    group: "{{file_group_loki_prometheus_datasource_yaml}}"
  notify: restart service grafana
  tags:
    - loki

- name: create file loki.cfg
  template:
    src: "{{file_src_loki_cfg}}"
    dest: "{{file_dst_loki_cfg}}"
    mode: "{{file_mode_loki_cfg}}"
    owner: "{{file_owner_loki_cfg}}"
    group: "{{file_group_loki_cfg}}"
  notify: reload service monit
  when: (loki_monitor_monit_state is match('true|yes|enable'))
  tags:
    - loki

- name: create file loki.nft
  template:
    src: "{{file_src_loki_nft}}"
    dest: "{{file_dst_loki_nft}}"
    mode: "{{file_mode_loki_nft}}"
    owner: "{{file_owner_loki_nft}}"
    group: "{{file_group_loki_nft}}"
  notify: reload service nftables
  when: (loki_nftables_state is match('true|yes|enable'))
  tags:
    - loki

- name: start service loki
  service:
    state: 'started'
    enabled: 'yes'
    name: "{{service_name_loki}}"
    daemon_reload: 'yes'
  tags:
    - loki
