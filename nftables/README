INFORMATION

Name   : nftables
Type   : Ansible role

Authors: liv community
License: Simplified BSD License

DESCRIPTION

This software provides an in-kernel packet classification framework that is
based on a network-specific Virtual Machine (VM) and the nft userspace command
line tool. The nftables framework reuses the existing Netfilter subsystems such
as the existing hook infrastructure, the connection tracking system, NAT,
userspace queueing and logging subsystem.

For more information on the usage and available configuration options,
consult the following sections.

USAGE

INSTALL
  - hosts: all
    roles:
      - role: nftables
    vars:
      nftables_state: 'install'

ENABLE
  - hosts: all
    roles:
      - role: nftables
    vars:
      nftables_state: 'enable'

DISABLE
  - hosts: all
    roles:
      - role: nftables
    vars:
     nftables_state: 'disable'

REMOVE
  - hosts: all
    roles:
      - role: nftables
    vars:
      nftables_state: 'remove'

INACTIVE
  - hosts: all
    roles:
      - role: nftables
    vars:
      nftables_state: 'inactive'

CONFIG
  vars:
    nftables_filter_all:
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'destination-unreachable', comment: 'icmp destination-unreachable from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'parameter-problem', comment: 'icmp parameter-problem from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'time-exceeded', comment: 'icmp time-exceeded from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', sources: {'10.1.1.0/24', '10.1.2.0/24', '10.1.3.0/24'}, ports: {'22'}, comment: 'ssh from n_dmz, n_base, n_client'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request to any'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench to any'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'10.11.1.11', '10.21.1.11'}, ports: {'domain'}, comment: 'dns to dns servers'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'10.11.1.11', '10.21.1.11'}, ports: {'domain'}, comment: 'dns to dns servers'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'10.2.1.11', '10.2.1.12', '10.2.1.13', '10.2.1.14'}, ports: {'ntp'}, comment: 'ntp to ntp servers'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'10.2.1.15'}, ports: {'http', 'https'}, comment: 'http, https to package repository'}

    nftables_filter_group:
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'http', 'https'}, comment: 'http, https from any'}
      - {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'tcp', ports: {'http', 'https'}, comment: 'http, https from any'}

    nftables_filter_host:
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'smtp'}, comment: 'mail from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'submission'}, comment: 'mail from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'imaps'}, comment: 'imaps from any'}
      - {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'http', 'https'}, comment: 'http, https from any'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', ports: {'smtp'}, comment: 'mail from any'}
      - {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', ports: {'submission'}, comment: 'mail from any'}
      - {action: 'accept', direction: 'forward', iif: 'wg0', version: 'ipv4', comment: 'WireGuard forwarding'}
      - {action: 'accept', direction: 'forward', oif: 'wg0', version: 'ipv4', comment: 'WireGuard forwarding'}

    nftables_nat_all:
      - {action: 'masquerade', direction: 'postrouting', version: 'ipv4', oif: 'ens18', comment: 'WireGuard masquerading'}

PARAMETERS

ROLE
  nftables_state
    Description: Control the state of the role.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'enable'
    Options    :
      Install : 'true' | 'yes' | 'install'
      Enable  : 'start' | 'on' | 'enable'
      Disable : 'stop' | 'off' | 'disable'
      Remove  : 'false' | 'no' | 'remove'
      Inactive: 'quiesce' | 'inactive'

  nftables_filter_all
    Description: Define the 'nftables_filter_all' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'destination-unreachable', comment: 'icmp destination-unreachable from any'},
                  {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request from any'},
                  {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'parameter-problem', comment: 'icmp parameter-problem from any'},
                  {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench from any'},
                  {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'time-exceeded', comment: 'icmp time-exceeded from any'},
                  {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', sources: {'192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8'}, ports: {'ssh'}, comment: 'ssh from private address space (RFC 1918)'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request to any'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench to any'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'0.0.0.0/0'}, ports: {'domain'}, comment: 'dns to any'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'0.0.0.0/0'}, ports: {'domain'}, comment: 'dns to any'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'0.0.0.0/0'}, ports: {'ntp'}, comment: 'ntp to any'},
                  {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'0.0.0.0/0'}, ports: {'http', 'https'}, comment: 'http, https to any'}]
    Options    :
      Examples: [{action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'destination-unreachable', comment: 'icmp destination-unreachable from any'},
                 {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request from any'},
                 {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'parameter-problem', comment: 'icmp parameter-problem from any'},
                 {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench from any'},
                 {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'icmp', code: 'time-exceeded', comment: 'icmp time-exceeded from any'},
                 {action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', sources: {'192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8'}, ports: {'ssh'}, comment: 'ssh from private address space (RFC 1918)'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'echo-request', comment: 'icmp echo-request to any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'icmp', code: 'source-quench', comment: 'icmp source-quench to any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'0.0.0.0/0'}, ports: {'domain'}, comment: 'dns to any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'0.0.0.0/0'}, ports: {'domain'}, comment: 'dns to any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'udp', destinations: {'0.0.0.0/0'}, ports: {'ntp'}, comment: 'ntp to any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'0.0.0.0/0'}, ports: {'http', 'https'}, comment: 'http, https to any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', code: 'destination-unreachable', comment: 'icmp6 destination-unreachable from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', code: 'echo-request', comment: 'icmp6 echo-request from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', code: 'parameter-problem', comment: 'icmp6 parameter-problem from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', code: 'packet-too-big', comment: 'icmp6 packet-too-big from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', code: 'time-exceeded', comment: 'icmp6 time-exceeded from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', sources: {'::'}, code: 'address-unreachable', comment: 'icmp address unreachable from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', sources: {'::'}, code: 'port-unreachable', comment: 'icmp port unreachable from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', sources: {'::'}, code: 'packet-too-big', comment: 'icmp packet too big from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'icmp', sources: {'::'}, code: 'echo-request', comment: 'icmp echo request from any'},
                 {action: 'accept', direction: 'in', version: 'ipv6', protocol: 'tcp', sources: {'fc00::/7'}, ports: {'ssh'}, comment: 'ssh from private address space (RFC 1918)'},
                 {action: 'accept', direction: 'out', version: 'ipv6', protocol: 'icmp', code: 'echo-request', comment: 'icmp6 echo-request to any'},
                 {action: 'accept', direction: 'out', version: 'ipv6', protocol: 'tcp', destinations: {'::'}, ports: {'domain'}, comment: 'dns to any'},
                 {action: 'accept', direction: 'out', version: 'ipv6', protocol: 'udp', destinations: {'::'}, ports: {'domain'}, comment: 'dns to any'},
                 {action: 'accept', direction: 'out', version: 'ipv6', protocol: 'udp', destinations: {'::'}, ports: {'ntp'}, comment: 'ntp to any'},
                 {action: 'accept', direction: 'out', version: 'ipv6', protocol: 'tcp', destinations: {'::'}, ports: {'http', 'https'}, comment: 'http, https to any'}]
      None    : []

  nftables_filter_group
    Description: Define the 'nftables_filter_group' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'http', 'https'}, comment: 'http, https from any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'10.1.1.0/24', '10.2.1.0/24'}, ports: {'http', 'https'}, comment: 'http, https to n_dmz, n_int'}]
      None    : []

  nftables_filter_host
    Description: Define the 'nftables_filter_host' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'accept', direction: 'in', version: 'ipv4', protocol: 'tcp', ports: {'http', 'https'}, comment: 'http, https from any'},
                 {action: 'accept', direction: 'out', version: 'ipv4', protocol: 'tcp', destinations: {'10.1.1.0/24', '10.2.1.0/24'}, ports: {'http', 'https'}, comment: 'http, https to n_dmz, n_int'}]
      None    : []

  nftables_filter_policies
    Description: Define the 'nftables_filter_policies' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'drop', direction: 'input', version: 'ipv4', comment: 'Default ipv4 input policy'},
                  {action: 'drop', direction: 'forward', version: 'ipv4', comment: 'Default ipv4 forward policy'},
                  {action: 'drop', direction: 'output', version: 'ipv4', comment: 'Default ipv4 output policy'},
                  {action: 'drop', direction: 'input', version: 'ipv6', comment: 'Default ipv6 input policy'},
                  {action: 'drop', direction: 'forward', version: 'ipv6', comment: 'Default ipv6 forward policy'},
                  {action: 'drop', direction: 'output', version: 'ipv6', comment: 'Default ipv6 output policy'}]
    Options    :
      Examples: [{action: 'drop', direction: 'input', version: 'ipv4', comment: 'Default ipv4 input policy'},
                 {action: 'drop', direction: 'forward', version: 'ipv4', comment: 'Default ipv4 forward policy'},
                 {action: 'accept', direction: 'output', version: 'ipv4', comment: 'Default ipv4 output policy'},
                 {action: 'drop', direction: 'input', version: 'ipv6', comment: 'Default ipv6 input policy'},
                 {action: 'drop', direction: 'forward', version: 'ipv6', comment: 'Default ipv6 forward policy'},
                 {action: 'accept', direction: 'output', version: 'ipv6', comment: 'Default ipv6 output policy'}]

  nftables_nat_all
    Description: Define the 'nftables_nat_all' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
    Options    :
      Examples: [{action: 'redirect', direction: 'prerouting', version: 'ipv4', comment: 'dnat redirect to local machine'}] |
                [{action: 'redirect', direction: 'prerouting', version: 'ipv4', protocol: 'tcp', dports: {'22'}, port: '222', comment: 'dnat redirect port 22 to 222'}] |
                [{direction: 'prerouting', version: 'ipv4', dnat: '10.11.1.11', comment: 'dnat to host'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80'}, dnat: '10.11.1.11:80', comment: 'dnat port 80 to host on port 80'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80', '443'}, dnat: '10.11.1.11', comment: 'dnat port 80, 443 to host'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', comment: 'masquerade', comment: 'snat masquerade source to address of output interface'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', types: {'fully-random'}, comment: 'snat masquerade source to address of output interface and port randomization'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, comment: 'snat masquerade sources on interface'}] |
                [{direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, snat: '1.2.3.4', types: {'fully-random'}, comment: 'snat sources on interface via address and port randomization'}]
      None    : []

  nftables_nat_group
    Description: Define the 'nftables_nat_group' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'redirect', direction: 'prerouting', version: 'ipv4', comment: 'dnat redirect to local machine'}] |
                [{action: 'redirect', direction: 'prerouting', version: 'ipv4', protocol: 'tcp', dports: {'22'}, port: '222', comment: 'dnat redirect port 22 to 222'}] |
                [{direction: 'prerouting', version: 'ipv4', dnat: '10.11.1.11', comment: 'dnat to host'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80'}, dnat: '10.11.1.11:80', comment: 'dnat port 80 to host on port 80'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80', '443'}, dnat: '10.11.1.11', comment: 'dnat port 80, 443 to host'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', comment: 'masquerade', comment: 'snat masquerade source to address of output interface'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', types: {'fully-random'}, comment: 'snat masquerade source to address of output interface and port randomization'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, comment: 'snat masquerade sources on interface'}] |
                [{direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, snat: '1.2.3.4', types: {'fully-random'}, comment: 'snat sources on interface via address and port randomization'}]
      None    : []

  nftables_nat_host
    Description: Define the 'nftables_nat_host' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'redirect', direction: 'prerouting', version: 'ipv4', comment: 'dnat redirect to local machine'}] |
                [{action: 'redirect', direction: 'prerouting', version: 'ipv4', protocol: 'tcp', dports: {'22'}, port: '222', comment: 'dnat redirect port 22 to 222'}] |
                [{direction: 'prerouting', version: 'ipv4', dnat: '10.11.1.11', comment: 'dnat to host'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80'}, dnat: '10.11.1.11:80', comment: 'dnat port 80 to host on port 80'}] |
                [{direction: 'prerouting', version: 'ipv4', iif: 'eth0', protocol: 'tcp', dports: {'80', '443'}, dnat: '10.11.1.11', comment: 'dnat port 80, 443 to host'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', comment: 'masquerade', comment: 'snat masquerade source to address of output interface'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', types: {'fully-random'}, comment: 'snat masquerade source to address of output interface and port randomization'}] |
                [{action: 'masquerade', direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, comment: 'snat masquerade sources on interface'}] |
                [{direction: 'postrouting', version: 'ipv4', oif: 'eth0', sources: {'10.10.1.0/24'}, snat: '1.2.3.4', types: {'fully-random'}, comment: 'snat sources on interface via address and port randomization'}]
      None    : []

  nftables_nat_policies
    Description: Define the 'nftables_nat_policies' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'accept', direction: 'prerouting', version: 'ipv4', comment: 'default ipv4 prerouting policy'},
                  {action: 'accept', direction: 'input', version: 'ipv4', comment: 'default ipv4 input policy'},
                  {action: 'accept', direction: 'output', version: 'ipv4', comment: 'default ipv4 output policy'},
                  {action: 'accept', direction: 'postrouting', version: 'ipv4', comment: 'default ipv4 postrouting policy'},
                  {action: 'accept', direction: 'prerouting', version: 'ipv6', comment: 'default ipv6 prerouting policy'},
                  {action: 'accept', direction: 'input', version: 'ipv6', comment: 'default ipv6 input policy'},
                  {action: 'accept', direction: 'output', version: 'ipv6', comment: 'default ipv6 output policy'},
                  {action: 'accept', direction: 'postrouting', version: 'ipv6', comment: 'default ipv6 postrouting policy'}]
    Options    : [{action: 'accept', direction: 'prerouting', version: 'ipv4', comment: 'default ipv4 prerouting policy'},
                  {action: 'accept', direction: 'input', version: 'ipv4', comment: 'default ipv4 input policy'},
                  {action: 'accept', direction: 'output', version: 'ipv4', comment: 'default ipv4 output policy'},
                  {action: 'accept', direction: 'postrouting', version: 'ipv4', comment: 'default ipv4 postrouting policy'},
                  {action: 'drop', direction: 'prerouting', version: 'ipv6', comment: 'default ipv6 prerouting policy'},
                  {action: 'drop', direction: 'input', version: 'ipv6', comment: 'default ipv6 input policy'},
                  {action: 'drop', direction: 'output', version: 'ipv6', comment: 'default ipv6 output policy'},
                  {action: 'drop', direction: 'postrouting', version: 'ipv6', comment: 'default ipv6 postrouting policy'}]

CONFLICTS

ROLES

DEPENDENCIES

PACKAGES
  nftables
    Version: >= 0.9
    Name   :
      Debian 10: 'nftables'

ROLES

PARAMETERS

REQUIREMENTS

CONTROL NODE
  Ansible
    Version: >= 2.8.0

MANAGED NODE
  Python
    Version: >= 2.7.0

SUPPORT

OPERATING SYSTEMS
  Debian
    Version: 11
      Status: Testing
