---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - prometheus

- name: create file prometheus-current.link
  file:
    state: link
    src: "{{file_src_prometheus_current_link}}"
    path: "{{file_dst_prometheus_current_link}}"
    owner: "{{file_owner_prometheus_current_link}}"
    group: "{{file_group_prometheus_current_link}}"
  notify: restart service prometheus
  tags:
    - prometheus

- name: create file prometheus.default
  template:
    src: "{{file_src_prometheus_default}}"
    dest: "{{file_dst_prometheus_default}}"
    mode: "{{file_mode_prometheus_default}}"
    owner: "{{file_owner_prometheus_default}}"
    group: "{{file_group_prometheus_default}}"
  notify: restart service prometheus
  tags:
    - prometheus

- name: create file alerting_rules.yml
  template:
    src: "{{file_src_alerting_rules_yml}}"
    dest: "{{file_dst_alerting_rules_yml}}"
    mode: "{{file_mode_alerting_rules_yml}}"
    owner: "{{file_owner_alerting_rules_yml}}"
    group: "{{file_group_alerting_rules_yml}}"
  notify: restart service prometheus
  when: (prometheus_alertmanager_state == True)
  tags:
    - prometheus

- name: create file prometheus.yml
  template:
    src: "{{file_src_prometheus_yml}}"
    dest: "{{file_dst_prometheus_yml}}"
    mode: "{{file_mode_prometheus_yml}}"
    owner: "{{file_owner_prometheus_yml}}"
    group: "{{file_group_prometheus_yml}}"
  notify: restart service prometheus
  tags:
    - prometheus

- name: create file prometheus_alertmanager_datasource.yaml
  template:
    src: "{{file_src_prometheus_alertmanager_datasource_yaml}}"
    dest: "{{file_dst_prometheus_alertmanager_datasource_yaml}}"
    mode: "{{file_mode_prometheus_alertmanager_datasource_yaml}}"
    owner: "{{file_owner_prometheus_alertmanager_datasource_yaml}}"
    group: "{{file_group_prometheus_alertmanager_datasource_yaml}}"
  notify: restart service grafana
  when: (prometheus_alertmanager_state == True)
  tags:
    - prometheus

- name: create file prometheus_datasource.yaml
  template:
    src: "{{file_src_prometheus_datasource_yaml}}"
    dest: "{{file_dst_prometheus_datasource_yaml}}"
    mode: "{{file_mode_prometheus_datasource_yaml}}"
    owner: "{{file_owner_prometheus_datasource_yaml}}"
    group: "{{file_group_prometheus_datasource_yaml}}"
  notify: restart service grafana
  tags:
    - prometheus

- name: create file builtin_dashboards.yaml
  template:
    src: "{{file_src_builtin_dashboards_yaml}}"
    dest: "{{file_dst_builtin_dashboards_yaml}}"
    mode: "{{file_mode_builtin_dashboards_yaml}}"
    owner: "{{file_owner_builtin_dashboards_yaml}}"
    group: "{{file_group_builtin_dashboards_yaml}}"
  notify: restart service grafana
  when: (prometheus_builtin_dashboards_state == True)
  tags:
    - prometheus

- name: copy file network_traffic.json, node_exporter.json, script_status.json, system_status.json
  copy:
    src: "{{item}}"
    dest: "{{file_dst_builtin_dashboards_dir}}/{{item}}"
    mode: "{{file_mode_dashboard_json}}"
    owner: "{{file_owner_dashboard_json}}"
    group: "{{file_group_dashboard_json}}"
  loop:
    - 'network_traffic.json'
    - 'node_exporter.json'
    - 'script_status.json'
    - 'system_status.json'
  notify: restart service grafana
  when: (prometheus_builtin_dashboards_state == True)
  tags:
    - prometheus

- name: copy file ipmi_exporter.json
  copy:
    src: 'ipmi_exporter.json'
    dest: "{{file_dst_builtin_dashboards_dir}}/{{item}}"
    mode: "{{file_mode_dashboard_json}}"
    owner: "{{file_owner_dashboard_json}}"
    group: "{{file_group_dashboard_json}}"
  loop:
    - 'ipmi_exporter.json'
  notify: restart service grafana
  when: (prometheus_builtin_dashboards_state == True) and (prometheus_ipmi_exporter_state == True)
  tags:
    - prometheus

- name: copy file ping_prober.json
  copy:
    src: 'ping_prober.json'
    dest: "{{file_dst_builtin_dashboards_dir}}/{{item}}"
    mode: "{{file_mode_dashboard_json}}"
    owner: "{{file_owner_dashboard_json}}"
    group: "{{file_group_dashboard_json}}"
  loop:
    - 'ping_prober.json'
  notify: restart service grafana
  when: (prometheus_builtin_dashboards_state == True) and (prometheus_blackbox_exporter_state == True)
  tags:
    - prometheus

- name: copy file smokeping_prober.json
  copy:
    src: 'smokeping_prober.json'
    dest: "{{file_dst_builtin_dashboards_dir}}/{{item}}"
    mode: "{{file_mode_dashboard_json}}"
    owner: "{{file_owner_dashboard_json}}"
    group: "{{file_group_dashboard_json}}"
  loop:
    - 'smokeping_prober.json'
  notify: restart service grafana
  when: (prometheus_builtin_dashboards_state == True) and (prometheus_smokeping_prober_state == True)
  tags:
    - prometheus

- name: create file prometheus.cfg
  template:
    src: "{{file_src_prometheus_cfg}}"
    dest: "{{file_dst_prometheus_cfg}}"
    mode: "{{file_mode_prometheus_cfg}}"
    owner: "{{file_owner_prometheus_cfg}}"
    group: "{{file_group_prometheus_cfg}}"
  notify:
    - validate monit
    - reload monit
  when: (prometheus_monitor_monit_state == True)
  tags:
    - prometheus

- name: remove file prometheus.cfg
  file:
    state: absent
    path: "{{file_dst_prometheus_cfg}}"
  notify: reload monit
  when: (prometheus_monitor_monit_state == False)
  tags:
    - prometheus

- name: create file prometheus.nft
  template:
    src: "{{file_src_prometheus_nft}}"
    dest: "{{file_dst_prometheus_nft}}"
    mode: "{{file_mode_prometheus_nft}}"
    owner: "{{file_owner_prometheus_nft}}"
    group: "{{file_group_prometheus_nft}}"
  notify:
    - validate nftables
    - reload nftables
  when: (prometheus_nftables_state == True)
  tags:
    - prometheus

- name: remove file prometheus.nft
  file:
    state: absent
    path: "{{file_dst_prometheus_nft}}"
  notify: reload nftables
  when: (prometheus_nftables_state == False)
  tags:
    - prometheus

- name: start service prometheus
  service:
    state: started
    enabled: True
    name: "{{service_name_prometheus}}"
    daemon_reload: True
  tags:
    - prometheus
