---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - restic

- name: install package bzip2
  package:
    state: present
    name: "{{package_name_bzip2}}"
    install_recommends: False
  tags:
    - restic

- name: install package mailx
  package:
    state: present
    name: "{{package_name_mailx}}"
    install_recommends: False
  when: (restic_monitor_mail_state is match('true|yes|enable'))
  tags:
    - restic

- name: create file restic_etc.dir
  file:
    state: directory
    path: "{{file_dst_restic_etc_dir}}"
    mode: "{{file_mode_restic_etc_dir}}"
    owner: "{{file_owner_restic_etc_dir}}"
    group: "{{file_group_restic_etc_dir}}"
  tags:
    - restic

- name: create file restic_log.dir
  file:
    state: directory
    path: "{{file_dst_restic_log_dir}}"
    mode: "{{file_mode_restic_log_dir}}"
    owner: "{{file_owner_restic_log_dir}}"
    group: "{{file_group_restic_log_dir}}"
  tags:
    - restic

- name: download file restic.bz2
  get_url:
    url: "{{file_src_restic_bz2}}"
    dest: "{{file_dst_restic_bz2}}"
    mode: "{{file_mode_restic_bz2}}"
    owner: "{{file_owner_restic_bz2}}"
    group: "{{file_group_restic_bz2}}"
    checksum: "{{file_checksum_restic_bz2}}"
  register: register_file_download_restic_bz2
  tags:
    - restic

- name: unarchive restic.bz2
  shell: "{{command_cmd_unarchive_restic_bz2}}"
  when: register_file_download_restic_bz2.changed
  tags:
    - restic

- name: ensure file restic
  file:
    state: file
    path: "{{file_dst_restic}}"
    mode: "{{file_mode_restic}}"
    owner: "{{file_owner_restic}}"
    group: "{{file_group_restic}}"
  tags:
    - restic

- name: create file exclude.conf
  template:
    src: "{{file_src_exclude_conf}}"
    dest: "{{file_dst_exclude_conf}}"
    mode: "{{file_mode_exclude_conf}}"
    owner: "{{file_owner_exclude_conf}}"
    group: "{{file_group_exclude_conf}}"
  tags:
    - restic

- name: create file include.conf
  template:
    src: "{{file_src_include_conf}}"
    dest: "{{file_dst_include_conf}}"
    mode: "{{file_mode_include_conf}}"
    owner: "{{file_owner_include_conf}}"
    group: "{{file_group_include_conf}}"
  tags:
    - restic

- name: create file password.conf
  template:
    src: "{{file_src_password_conf}}"
    dest: "{{file_dst_password_conf}}"
    mode: "{{file_mode_password_conf}}"
    owner: "{{file_owner_password_conf}}"
    group: "{{file_group_password_conf}}"
  no_log: True
  tags:
    - restic

- name: create file repository.conf
  template:
    src: "{{file_src_repository_conf}}"
    dest: "{{file_dst_repository_conf}}"
    mode: "{{file_mode_repository_conf}}"
    owner: "{{file_owner_repository_conf}}"
    group: "{{file_group_repository_conf}}"
  no_log: True
  tags:
    - restic

- name: create file restic.log
  copy:
    content: ''
    force: False
    dest: "{{file_dst_restic_log}}"
    mode: "{{file_mode_restic_log}}"
    owner: "{{file_owner_restic_log}}"
    group: "{{file_group_restic_log}}"
  tags:
    - restic

- name: create file restic_run-backup
  template:
    src: "{{file_src_restic_run_backup}}"
    dest: "{{file_dst_restic_run_backup}}"
    mode: "{{file_mode_restic_run_backup}}"
    owner: "{{file_owner_restic_run_backup}}"
    group: "{{file_group_restic_run_backup}}"
  no_log: True
  tags:
    - restic

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (restic_nftables_state is match('true|yes|enable'))
  tags:
    - restic

- name: create file nftables.d
  file:
    state: directory
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (restic_nftables_state is match('true|yes|enable')) and (register_nftables_d.stat.exists == False)
  tags:
    - restic

- name: check service nftables
  shell: "{{command_cmd_check_service_nftables}}"
  register: register_check_service_nftables
  changed_when: (register_check_service_nftables.rc > 1)
  failed_when: (register_check_service_nftables.rc > 1)
  check_mode: False
  when: (restic_nftables_state is match('true|yes|enable'))
  tags:
    - restic
