---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - mariadb

- name: install package mailx
  package:
    state: 'present'
    name: "{{package_name_mailx}}"
    install_recommends: 'no'
  when: (mariadb_monitor_mail_state is match('true|yes|enable'))
  tags:
    - mariadb

- name: install package mariadb-client
  package:
    state: 'present'
    name: "{{package_name_mariadb_client}}"
    install_recommends: 'no'
  tags:
    - mariadb

- name: install package mariadb-server
  package:
    state: 'present'
    name: "{{package_name_mariadb_server}}"
    install_recommends: 'no'
  register: register_package_install_mariadb_server
  tags:
    - mariadb

- name: create file backup.dir
  file:
    state: 'directory'
    path: "{{file_dst_backup_dir}}"
    mode: "{{file_mode_backup_dir}}"
    owner: "{{file_owner_backup_dir}}"
    group: "{{file_group_backup_dir}}"
  tags:
    - mariadb

- name: create file mariadb_backup.dir
  file:
    state: 'directory'
    path: "{{file_dst_mariadb_backup_dir}}"
    mode: "{{file_mode_mariadb_backup_dir}}"
    owner: "{{file_owner_mariadb_backup_dir}}"
    group: "{{file_group_mariadb_backup_dir}}"
  tags:
    - mariadb

- name: create file mysql-etc.dir
  file:
    state: 'directory'
    path: "{{file_dst_mysql_etc_dir}}"
    mode: "{{file_mode_mysql_etc_dir}}"
    owner: "{{file_owner_mysql_etc_dir}}"
    group: "{{file_group_mysql_etc_dir}}"
  tags:
    - mariadb

- name: create file credentials.cnf
  template:
    src: "{{file_src_credentials_cnf}}"
    dest: "{{file_dst_credentials_cnf}}"
    mode: "{{file_mode_credentials_cnf}}"
    owner: "{{file_owner_credentials_cnf}}"
    group: "{{file_group_credentials_cnf}}"
  no_log: 'true'
  tags:
    - mariadb

- name: create file mariadb_run-backup
  template:
    src: "{{file_src_mariadb_run_backup}}"
    dest: "{{file_dst_mariadb_run_backup}}"
    mode: "{{file_mode_mariadb_run_backup}}"
    owner: "{{file_owner_mariadb_run_backup}}"
    group: "{{file_group_mariadb_run_backup}}"
  tags:
    - mariadb

- name: stat file monit.d
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (mariadb_monitor_monit_state is match('true|yes|enable'))
  tags:
    - mariadb

- name: create file monit.d
  file:
    state: 'directory'
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (mariadb_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - mariadb

- name: check service monit
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 1)
  failed_when: (register_check_service_monit.rc > 1)
  check_mode: 'no'
  when: (mariadb_monitor_monit_state is match('true|yes|enable'))
  tags:
    - mariadb

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (mariadb_nftables_state is match('true|yes|enable'))
  tags:
    - mariadb

- name: create file nftables.d
  file:
    state: 'directory'
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (mariadb_nftables_state is match('true|yes|enable')) and (register_nftables_d.stat.exists == False)
  tags:
    - mariadb

- name: check service nftables
  shell: "{{command_cmd_check_service_nftables}}"
  register: register_check_service_nftables
  changed_when: (register_check_service_nftables.rc > 1)
  failed_when: (register_check_service_nftables.rc > 1)
  check_mode: 'no'
  when: (mariadb_nftables_state is match('true|yes|enable'))
  tags:
    - mariadb
