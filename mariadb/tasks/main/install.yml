---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - install
    - mariadb

#-------------------------------------------------------------------------------
# PACKAGING
#-------------------------------------------------------------------------------

- name: 'package install mariadb-client'
  package:
    state: 'present'
    name: "{{package_name_mariadb_client}}"
  tags:
    - install
    - mariadb

- name: 'package install mariadb-server'
  package:
    state: 'present'
    name: "{{package_name_mariadb_server}}"
  register: register_package_install_mariadb_server
  tags:
    - install
    - mariadb

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'file create backup.dir'
  file:
    state: 'directory'
    path: "{{file_dst_backup_dir}}"
    mode: "{{file_mode_backup_dir}}"
    owner: "{{file_owner_backup_dir}}"
    group: "{{file_group_backup_dir}}"
  tags:
    - install
    - mariadb

- name: 'file create mariadb_backup.dir'
  file:
    state: 'directory'
    path: "{{file_dst_mariadb_backup_dir}}"
    mode: "{{file_mode_mariadb_backup_dir}}"
    owner: "{{file_owner_mariadb_backup_dir}}"
    group: "{{file_group_mariadb_backup_dir}}"
  tags:
    - install
    - mariadb

- name: 'file create mysql-etc.dir'
  file:
    state: 'directory'
    path: "{{file_dst_mysql_etc_dir}}"
    mode: "{{file_mode_mysql_etc_dir}}"
    owner: "{{file_owner_mysql_etc_dir}}"
    group: "{{file_group_mysql_etc_dir}}"
  tags:
    - install
    - mariadb

- name: 'file create credentials.cnf'
  template:
    src: "{{file_src_credentials_cnf}}"
    dest: "{{file_dst_credentials_cnf}}"
    mode: "{{file_mode_credentials_cnf}}"
    owner: "{{file_owner_credentials_cnf}}"
    group: "{{file_group_credentials_cnf}}"
  no_log: 'true'
  tags:
    - install
    - mariadb

- name: 'file create mariadb_run-backup'
  template:
    src: "{{file_src_mariadb_run_backup}}"
    dest: "{{file_dst_mariadb_run_backup}}"
    mode: "{{file_mode_mariadb_run_backup}}"
    owner: "{{file_owner_mariadb_run_backup}}"
    group: "{{file_group_mariadb_run_backup}}"
  tags:
    - install
    - mariadb

- name: 'stat file monit.d'
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (mariadb_monitor_monit_state is match('true|yes|enable'))
  tags:
    - install
    - mariadb

- name: 'file create monit.d'
  file:
    state: 'directory'
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (mariadb_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - install
    - mariadb

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

- name: 'command check service monit'
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 1)
  failed_when: (register_check_service_monit.rc > 1)
  check_mode: 'no'
  when: (mariadb_monitor_monit_state is match('true|yes|enable'))
  tags:
    - install
    - mariadb
