---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - squid

- name: create file dst_domain_allowed.acl
  template:
    src: "{{file_src_dst_domain_allowed_acl}}"
    dest: "{{file_dst_dst_domain_allowed_acl}}"
    mode: "{{file_mode_dst_domain_allowed_acl}}"
    owner: "{{file_owner_dst_domain_allowed_acl}}"
    group: "{{file_group_dst_domain_allowed_acl}}"
  notify: parse config
  tags:
    - squid

- name: create file dst_domain_blocked.acl
  template:
    src: "{{file_src_dst_domain_blocked_acl}}"
    dest: "{{file_dst_dst_domain_blocked_acl}}"
    mode: "{{file_mode_dst_domain_blocked_acl}}"
    owner: "{{file_owner_dst_domain_blocked_acl}}"
    group: "{{file_group_dst_domain_blocked_acl}}"
  notify: parse config
  tags:
    - squid

- name: create file dst_network_allowed.acl
  template:
    src: "{{file_src_dst_network_allowed_acl}}"
    dest: "{{file_dst_dst_network_allowed_acl}}"
    mode: "{{file_mode_dst_network_allowed_acl}}"
    owner: "{{file_owner_dst_network_allowed_acl}}"
    group: "{{file_group_dst_network_allowed_acl}}"
  notify: parse config
  tags:
    - squid

- name: create file dst_network_blocked.acl
  template:
    src: "{{file_src_dst_network_blocked_acl}}"
    dest: "{{file_dst_dst_network_blocked_acl}}"
    mode: "{{file_mode_dst_network_blocked_acl}}"
    owner: "{{file_owner_dst_network_blocked_acl}}"
    group: "{{file_group_dst_network_blocked_acl}}"
  notify: parse config
  tags:
    - squid

- name: create file src_network_unrestricted.acl
  template:
    src: "{{file_src_src_network_unrestricted_acl}}"
    dest: "{{file_dst_src_network_unrestricted_acl}}"
    mode: "{{file_mode_src_network_unrestricted_acl}}"
    owner: "{{file_owner_src_network_unrestricted_acl}}"
    group: "{{file_group_src_network_unrestricted_acl}}"
  notify: parse config
  tags:
    - squid

- name: create file squid.conf
  template:
    src: "{{file_src_squid_conf}}"
    dest: "{{file_dst_squid_conf}}"
    mode: "{{file_mode_squid_conf}}"
    owner: "{{file_owner_squid_conf}}"
    group: "{{file_group_squid_conf}}"
  notify: parse config
  tags:
    - squid

- name: stat file cache.dir
  stat:
    path: "{{file_dst_cache_dir}}"
  register: register_cache_dir
  tags:
    - squid

- name: remove file squid.cfg
  file:
    state: absent
    path: "{{file_dst_squid_cfg}}"
  notify: reload service monit
  tags:
    - squid

- name: create file squid.nft
  template:
    src: "{{file_src_squid_nft}}"
    dest: "{{file_dst_squid_nft}}"
    mode: "{{file_mode_squid_nft}}"
    owner: "{{file_owner_squid_nft}}"
    group: "{{file_group_squid_nft}}"
  notify: reload service nftables
  when: (squid_nftables_state == True)
  tags:
    - squid

- name: remove file squid.nft
  file:
    state: absent
    path: "{{file_dst_squid_nft}}"
  notify: reload service nftables
  when: (squid_nftables_state == False)
  tags:
    - squid

- name: create cache.dir
  shell: "{{command_cmd_create_cache_dir}}"
  check_mode: False
  when: (register_cache_dir.stat.exists == False)
  tags:
    - squid

- name: stop service squid
  service:
    state: stopped
    enabled: False
    name: "{{service_name_squid}}"
  tags:
    - squid
