---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - grafana

- name: install package gnupg1
  package:
    state: present
    name: "{{package_name_gnupg1}}"
    install_recommends: False
  tags:
    - grafana

- name: copy file grafana.asc
  copy:
    src: "{{file_src_grafana_asc}}"
    dest: "{{file_dst_grafana_asc}}"
    mode: "{{file_mode_grafana_asc}}"
    owner: "{{file_owner_grafana_asc}}"
    group: "{{file_group_grafana_asc}}"
  register: register_grafana_asc
  when: (ansible_distribution_major_version is match('12'))
  tags:
    - grafana

- name: copy file grafana.gpg
  copy:
    src: "{{file_src_grafana_gpg}}"
    dest: "{{file_dst_grafana_gpg}}"
    mode: "{{file_mode_grafana_gpg}}"
    owner: "{{file_owner_grafana_gpg}}"
    group: "{{file_group_grafana_gpg}}"
  register: register_grafana_gpg
  when: (ansible_distribution_major_version is match('11'))
  tags:
    - grafana

- name: copy file grafana.list
  copy:
    src: "{{file_src_grafana_list}}"
    dest: "{{file_dst_grafana_list}}"
    mode: "{{file_mode_grafana_list}}"
    owner: "{{file_owner_grafana_list}}"
    group: "{{file_group_grafana_list}}"
  tags:
    - grafana

- name: stat file monit.d
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (grafana_monitor_monit_state is match('true|yes|enable'))
  tags:
    - grafana

- name: create file monit.d
  file:
    state: directory
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (grafana_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - grafana

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (grafana_nftables_state is match('true|yes|enable'))
  tags:
    - grafana

- name: create file nftables.d
  file:
    state: directory
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (grafana_nftables_state is match('true|yes|enable')) and (register_nftables_d.stat.exists == False)
  tags:
    - grafana

- name: check service nftables
  shell: "{{command_cmd_check_service_nftables}}"
  register: register_check_service_nftables
  changed_when: (register_check_service_nftables.rc > 1)
  failed_when: (register_check_service_nftables.rc > 1)
  check_mode: False
  when: (grafana_nftables_state is match('true|yes|enable'))
  tags:
    - grafana

- name: add grafana.key
  shell: "{{command_cmd_add_grafana_key}}"
  check_mode: False
  when: register_grafana_gpg.changed
  tags:
    - grafana

- name: apt update
  shell: "{{command_cmd_apt_update}}"
  check_mode: False
  when: (register_grafana_gpg.changed) or (register_grafana_asc.changed)
  tags:
    - grafana

- name: check service monit
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 1)
  failed_when: (register_check_service_monit.rc > 1)
  check_mode: False
  when: (grafana_monitor_monit_state is match('true|yes|enable'))
  tags:
    - grafana

- name: install package grafana
  package:
    state: present
    name: "{{package_name_grafana}}"
    install_recommends: False
  tags:
    - grafana
