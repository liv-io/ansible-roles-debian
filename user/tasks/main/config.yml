---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - user

- name: config primary group
  group:
    state: "{{'absent' if (item.state|default(True) == False) else 'present'}}"
    name: "{{item.name}}"
    gid: "{{item.gid|default(omit)}}"
    system: "{{True if (item.system|default(False) == True) else False}}"
  loop: "{{user_config_all + user_config_group + user_config_host}}"
  tags:
    - user

- name: config user
  user:
    state: "{{'absent' if (item.state|default(True) == False) else 'present'}}"
    name: "{{item.name}}"
    comment: "{{item.comment|default(item.name)}}"
    uid: "{{item.uid|default(omit)}}"
    group: "{{item.group|default('nobody')}}"
    groups: "{{item.groups|default([])|join(',')}}"
    append: "{{True if (item.groups_append|default(False) == True) else False}}"
    home: "{{item.home|default('/home/'+item.name)}}"
    createhome: "{{False if (item.home_create|default(True) == False) else True}}"
    move_home: "{{True if (item.home_move|default(False) == True) else False}}"
    remove: "{{True if (item.home_remove|default(False) == True) else False}}"
    force: "{{True if (item.home_force|default(False) == True) else False}}"
    password: "{{item.password|default('!')}}"
    update_password: "{{'on_create' if (item.password_update|default(True) == False) else 'always'}}"
    shell: "{{item.shell|default('/bin/bash')}}"
    system: "{{True if (item.system|default(False) == True) else False}}"
  loop: "{{user_config_all + user_config_group + user_config_host}}"
  tags:
    - user

- name: config .ssh.dir
  file:
    state: "{{'absent' if (item.state|default(True) == False) else 'directory'}}"
    path: "{{item.home|default('/home/'+item.name+'/.ssh')}}"
    mode: "{{file_mode_ssh_dir}}"
    owner: "{{item.name}}"
    group: "{{item.group|default(item.name)}}"
  loop: "{{user_config_all + user_config_group + user_config_host}}"
  tags:
    - user

- name: config authorized_keys
  template:
    src: "{{file_src_authorized_keys}}"
    dest: "{{item.home|default('/home/'+item.name+'/.ssh')}}/authorized_keys"
    mode: "{{file_mode_authorized_keys}}"
    owner: "{{item.name}}"
    group: "{{item.group|default(item.name)}}"
  loop: "{{user_config_all + user_config_group + user_config_host}}"
  when: not (item.state == False)
  tags:
    - user
